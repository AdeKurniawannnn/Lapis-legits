"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
self["webpackHotUpdate_N_E"]("app/video-player-test/page",{

/***/ "(app-pages-browser)/./src/components/video/ScrollVideoPlayer.tsx":
/*!****************************************************!*\
  !*** ./src/components/video/ScrollVideoPlayer.tsx ***!
  \****************************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony import */ var react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react/jsx-dev-runtime */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/jsx-dev-runtime.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var styled_components__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! styled-components */ \"(app-pages-browser)/./node_modules/styled-components/dist/styled-components.browser.esm.js\");\n/* harmony import */ var _hooks_useScrollVideo__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ../../hooks/useScrollVideo */ \"(app-pages-browser)/./src/hooks/useScrollVideo.ts\");\n/* harmony import */ var _hooks_useVideoPreload__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ../../hooks/useVideoPreload */ \"(app-pages-browser)/./src/hooks/useVideoPreload.ts\");\n/* __next_internal_client_entry_do_not_use__ default auto */ \nvar _s = $RefreshSig$();\n\n\n\n\n// Styled Components\nconst VideoContainer = styled_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].div.withConfig({\n    displayName: \"ScrollVideoPlayer__VideoContainer\",\n    componentId: \"sc-a7d6f48f-0\"\n})([\n    \"position:relative;width:100%;aspect-ratio:\",\n    \";overflow:hidden;background-color:#000;border-radius:4px;\"\n], (props)=>props.aspectRatio);\n_c = VideoContainer;\nconst VideoElement = styled_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].video.withConfig({\n    displayName: \"ScrollVideoPlayer__VideoElement\",\n    componentId: \"sc-a7d6f48f-1\"\n})([\n    \"width:100%;height:100%;object-fit:cover;\"\n]);\n_c1 = VideoElement;\nconst ControlsOverlay = styled_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].div.withConfig({\n    displayName: \"ScrollVideoPlayer__ControlsOverlay\",\n    componentId: \"sc-a7d6f48f-2\"\n})([\n    \"position:absolute;bottom:0;left:0;width:100%;padding:12px;background:linear-gradient(transparent,rgba(0,0,0,0.7));display:flex;justify-content:space-between;align-items:center;opacity:\",\n    \";transition:opacity 0.3s ease;\"\n], (props)=>props.isVisible ? \"1\" : \"0\");\n_c2 = ControlsOverlay;\nconst ControlButton = styled_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].button.withConfig({\n    displayName: \"ScrollVideoPlayer__ControlButton\",\n    componentId: \"sc-a7d6f48f-3\"\n})([\n    \"background:rgba(0,0,0,0.5);color:white;border:none;border-radius:50%;width:36px;height:36px;display:flex;justify-content:center;align-items:center;cursor:pointer;transition:background-color 0.2s;&:hover{background-color:rgba(0,0,0,0.8);}svg{width:20px;height:20px;}\"\n]);\n_c3 = ControlButton;\nconst ErrorDisplay = styled_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].div.withConfig({\n    displayName: \"ScrollVideoPlayer__ErrorDisplay\",\n    componentId: \"sc-a7d6f48f-4\"\n})([\n    \"position:absolute;top:0;left:0;width:100%;height:100%;display:flex;flex-direction:column;justify-content:center;align-items:center;background-color:rgba(0,0,0,0.7);color:white;text-align:center;padding:20px;\"\n]);\n_c4 = ErrorDisplay;\nconst ScrollProgressIndicator = styled_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].div.withConfig({\n    displayName: \"ScrollVideoPlayer__ScrollProgressIndicator\",\n    componentId: \"sc-a7d6f48f-5\"\n})([\n    \"position:absolute;bottom:0;left:0;height:3px;width:\",\n    \"%;background-color:#3498db;transition:width 0.1s ease;\"\n], (props)=>props.progress * 100);\n_c5 = ScrollProgressIndicator;\n// Additional styled component for preload overlay\nconst PreloadOverlay = styled_components__WEBPACK_IMPORTED_MODULE_4__[\"default\"].div.withConfig({\n    displayName: \"ScrollVideoPlayer__PreloadOverlay\",\n    componentId: \"sc-a7d6f48f-6\"\n})([\n    \"position:absolute;top:0;left:0;width:100%;height:100%;background-color:rgba(0,0,0,0.7);display:flex;flex-direction:column;justify-content:center;align-items:center;color:white;.preload-progress{width:80%;height:4px;background-color:rgba(255,255,255,0.3);border-radius:2px;margin-top:10px;overflow:hidden;.progress-bar{height:100%;width:\",\n    \"%;background-color:#3498db;transition:width 0.3s ease;}}\"\n], (props)=>Math.round(props.progress * 100));\n_c6 = PreloadOverlay;\n// Icons\nconst MuteIcon = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            d: \"M3.63 3.63a.996.996 0 000 1.41L7.29 8.7 7 9H4c-.55 0-1 .45-1 1v4c0 .55.45 1 1 1h3l3.29 3.29c.63.63 1.71.18 1.71-.71v-4.17l4.18 4.18c-.49.37-1.02.68-1.6.91-.36.15-.58.53-.58.92 0 .72.73 1.18 1.39.91.8-.33 1.55-.77 2.22-1.31l1.34 1.34a.996.996 0 101.41-1.41L5.05 3.63c-.39-.39-1.02-.39-1.42 0zM19 12c0 .82-.15 1.61-.41 2.34l1.53 1.53c.56-1.17.88-2.48.88-3.87 0-3.83-2.4-7.11-5.78-8.4-.59-.23-1.22.23-1.22.86v.19c0 .38.25.71.61.85C17.18 6.54 19 9.06 19 12zm-8.71-6.29l-.17.17L12 7.76V6.41c0-.89-1.08-1.33-1.71-.7zM16.5 12A4.5 4.5 0 0014 7.97v1.79l2.48 2.48c.01-.08.02-.16.02-.24z\"\n        }, void 0, false, {\n            fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n            lineNumber: 199,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n        lineNumber: 198,\n        columnNumber: 3\n    }, undefined);\n_c7 = MuteIcon;\nconst UnmuteIcon = ()=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"svg\", {\n        viewBox: \"0 0 24 24\",\n        fill: \"currentColor\",\n        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"path\", {\n            d: \"M3 9v6h4l5 5V4L7 9H3zm13.5 3c0-1.77-1.02-3.29-2.5-4.03v8.05c1.48-.73 2.5-2.25 2.5-4.02zM14 3.23v2.06c2.89.86 5 3.54 5 6.71s-2.11 5.85-5 6.71v2.06c4.01-.91 7-4.49 7-8.77s-2.99-7.86-7-8.77z\"\n        }, void 0, false, {\n            fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n            lineNumber: 205,\n            columnNumber: 5\n        }, undefined)\n    }, void 0, false, {\n        fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n        lineNumber: 204,\n        columnNumber: 3\n    }, undefined);\n_c8 = UnmuteIcon;\n// Main Component\nconst ScrollVideoPlayer = (param)=>{\n    let { sources, poster, loop = true, initiallyMuted = true, aspectRatio = \"16 / 9\", playOnScroll = true, playThreshold = 0.3, className, style, errorMessage = \"Error loading video\", usePreloading = true, preloadMetadataOnly = false, preloadPriority = 1 } = param;\n    _s();\n    // Refs and state\n    const videoRef = (0,react__WEBPACK_IMPORTED_MODULE_1__.useRef)(null);\n    const [containerRef, scrollState] = (0,_hooks_useScrollVideo__WEBPACK_IMPORTED_MODULE_2__[\"default\"])();\n    const [isMuted, setIsMuted] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(initiallyMuted);\n    const [isPlaying, setIsPlaying] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [showControls, setShowControls] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(null);\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_1__.useState)(false);\n    // Use our video preload hook if preloading is enabled\n    const preload = usePreloading ? (0,_hooks_useVideoPreload__WEBPACK_IMPORTED_MODULE_3__[\"default\"])(sources, {\n        metadataOnly: preloadMetadataOnly,\n        priority: preloadPriority\n    }) : null;\n    var _preload_error;\n    // Combine error states from both sources\n    const combinedError = error || ((_preload_error = preload === null || preload === void 0 ? void 0 : preload.error) !== null && _preload_error !== void 0 ? _preload_error : null);\n    // Set local video reference when preloaded video becomes available\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        if (preload === null || preload === void 0 ? void 0 : preload.videoElement) {\n            videoRef.current = preload.videoElement;\n            setIsLoaded(true);\n        }\n    }, [\n        preload === null || preload === void 0 ? void 0 : preload.videoElement\n    ]);\n    // Toggle mute state\n    const toggleMute = ()=>{\n        if (videoRef.current) {\n            videoRef.current.muted = !isMuted;\n            setIsMuted(!isMuted);\n        }\n    };\n    // Handle video errors\n    const handleVideoError = ()=>{\n        // Only set error if we're not using preloading (preloading has its own error handling)\n        if (!usePreloading) {\n            setError(errorMessage);\n        }\n    };\n    // Handle when video metadata is loaded\n    const handleVideoLoaded = ()=>{\n        // Only set loaded state if we're not using preloading (preloading has its own loading state)\n        if (!usePreloading) {\n            setIsLoaded(true);\n        }\n    };\n    // Control playback based on scroll position\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        const videoElement = videoRef.current;\n        if (!videoElement || !playOnScroll) return;\n        // Don't attempt to play until video is ready\n        if (usePreloading && (!(preload === null || preload === void 0 ? void 0 : preload.isLoaded) || (preload === null || preload === void 0 ? void 0 : preload.isLoading))) {\n            return;\n        }\n        // Check if the video is sufficiently in view\n        if (scrollState.isIntersecting && scrollState.intersectionRatio >= playThreshold) {\n            if (!isPlaying) {\n                videoElement.play().then(()=>{\n                    setIsPlaying(true);\n                }).catch((err)=>{\n                    console.error(\"Error playing video:\", err);\n                    setError(\"Could not autoplay video. Please interact with the page first.\");\n                });\n            }\n        // Control playback speed or seek position based on scroll progress if needed\n        // This can be extended for more advanced scroll effects\n        } else if (isPlaying) {\n            videoElement.pause();\n            setIsPlaying(false);\n        }\n    }, [\n        scrollState.isIntersecting,\n        scrollState.intersectionRatio,\n        playThreshold,\n        isPlaying,\n        playOnScroll,\n        usePreloading,\n        preload === null || preload === void 0 ? void 0 : preload.isLoaded,\n        preload === null || preload === void 0 ? void 0 : preload.isLoading\n    ]);\n    // Show/hide controls when hovering over the video\n    const handleMouseEnter = ()=>setShowControls(true);\n    const handleMouseLeave = ()=>setShowControls(false);\n    // Preload videos for sections that will be viewed next\n    // This is a demonstration of how you could preload multiple videos\n    (0,react__WEBPACK_IMPORTED_MODULE_1__.useEffect)(()=>{\n        // Start preloading next videos when current video is in view\n        if (scrollState.isIntersecting && sources.length > 0) {\n            // This would typically be dynamically determined based on page content\n            // For this example, we're using static sources\n            (0,_hooks_useVideoPreload__WEBPACK_IMPORTED_MODULE_3__.preloadVideosInAdvance)([\n                // Example of preloading additional videos\n                // In a real implementation, these would be the videos likely to be viewed next\n                // based on navigation patterns or page structure\n                {\n                    sources: sources,\n                    options: {\n                        priority: preloadPriority - 1,\n                        metadataOnly: true // Only preload metadata for these\n                    }\n                }\n            ]);\n        }\n    }, [\n        scrollState.isIntersecting,\n        preloadPriority,\n        sources\n    ]);\n    return /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VideoContainer, {\n        ref: containerRef,\n        aspectRatio: aspectRatio,\n        className: className,\n        style: style,\n        onMouseEnter: handleMouseEnter,\n        onMouseLeave: handleMouseLeave,\n        children: [\n            (!usePreloading || !preload) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(VideoElement, {\n                ref: videoRef,\n                poster: poster,\n                loop: loop,\n                muted: isMuted,\n                playsInline: true,\n                onError: handleVideoError,\n                onLoadedMetadata: handleVideoLoaded,\n                children: [\n                    sources.map((source, index)=>/*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"source\", {\n                            src: source.src,\n                            type: source.type\n                        }, index, false, {\n                            fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                            lineNumber: 362,\n                            columnNumber: 13\n                        }, undefined)),\n                    \"Your browser does not support the video tag.\"\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                lineNumber: 352,\n                columnNumber: 9\n            }, undefined),\n            usePreloading && (preload === null || preload === void 0 ? void 0 : preload.videoElement) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                style: {\n                    display: \"contents\"\n                },\n                children: /*#__PURE__*/ react__WEBPACK_IMPORTED_MODULE_1___default().cloneElement(preload.videoElement, {\n                    ref: videoRef,\n                    poster,\n                    loop,\n                    muted: isMuted,\n                    playsInline: true,\n                    style: {\n                        width: \"100%\",\n                        height: \"100%\",\n                        objectFit: \"cover\"\n                    }\n                })\n            }, void 0, false, {\n                fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                lineNumber: 371,\n                columnNumber: 9\n            }, undefined),\n            usePreloading && (preload === null || preload === void 0 ? void 0 : preload.isLoading) && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(PreloadOverlay, {\n                progress: preload.progress,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            \"Loading video... \",\n                            Math.round(preload.progress * 100),\n                            \"%\"\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                        lineNumber: 390,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        className: \"preload-progress\",\n                        children: /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                            className: \"progress-bar\"\n                        }, void 0, false, {\n                            fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                            lineNumber: 392,\n                            columnNumber: 13\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                        lineNumber: 391,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                lineNumber: 389,\n                columnNumber: 9\n            }, undefined),\n            combinedError && /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ErrorDisplay, {\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"h3\", {\n                        children: [\n                            \"⚠️ \",\n                            combinedError\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                        lineNumber: 400,\n                        columnNumber: 11\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"p\", {\n                        children: \"Please try refreshing the page or check your connection.\"\n                    }, void 0, false, {\n                        fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                        lineNumber: 401,\n                        columnNumber: 11\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                lineNumber: 399,\n                columnNumber: 9\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ControlsOverlay, {\n                isVisible: showControls,\n                children: [\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ControlButton, {\n                        onClick: toggleMute,\n                        \"aria-label\": isMuted ? \"Unmute\" : \"Mute\",\n                        children: isMuted ? /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(UnmuteIcon, {}, void 0, false, {\n                            fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                            lineNumber: 408,\n                            columnNumber: 22\n                        }, undefined) : /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(MuteIcon, {}, void 0, false, {\n                            fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                            lineNumber: 408,\n                            columnNumber: 39\n                        }, undefined)\n                    }, void 0, false, {\n                        fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                        lineNumber: 407,\n                        columnNumber: 9\n                    }, undefined),\n                    /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(\"div\", {\n                        children: [\n                            isPlaying ? \"Playing\" : \"Paused\",\n                            isLoaded && \" - \".concat(Math.round(scrollState.scrollProgress * 100), \"%\")\n                        ]\n                    }, void 0, true, {\n                        fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                        lineNumber: 411,\n                        columnNumber: 9\n                    }, undefined)\n                ]\n            }, void 0, true, {\n                fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                lineNumber: 406,\n                columnNumber: 7\n            }, undefined),\n            /*#__PURE__*/ (0,react_jsx_dev_runtime__WEBPACK_IMPORTED_MODULE_0__.jsxDEV)(ScrollProgressIndicator, {\n                progress: scrollState.scrollProgress\n            }, void 0, false, {\n                fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n                lineNumber: 418,\n                columnNumber: 7\n            }, undefined)\n        ]\n    }, void 0, true, {\n        fileName: \"/Users/dennyleonardo/Documents/Cursor Workspaces/Lapis Website/src/components/video/ScrollVideoPlayer.tsx\",\n        lineNumber: 343,\n        columnNumber: 5\n    }, undefined);\n};\n_s(ScrollVideoPlayer, \"TorOpQs/9nJoXn714Z0MoAlAuVg=\", false, function() {\n    return [\n        _hooks_useScrollVideo__WEBPACK_IMPORTED_MODULE_2__[\"default\"],\n        _hooks_useVideoPreload__WEBPACK_IMPORTED_MODULE_3__[\"default\"]\n    ];\n});\n_c9 = ScrollVideoPlayer;\n/* harmony default export */ __webpack_exports__[\"default\"] = (ScrollVideoPlayer);\nvar _c, _c1, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9;\n$RefreshReg$(_c, \"VideoContainer\");\n$RefreshReg$(_c1, \"VideoElement\");\n$RefreshReg$(_c2, \"ControlsOverlay\");\n$RefreshReg$(_c3, \"ControlButton\");\n$RefreshReg$(_c4, \"ErrorDisplay\");\n$RefreshReg$(_c5, \"ScrollProgressIndicator\");\n$RefreshReg$(_c6, \"PreloadOverlay\");\n$RefreshReg$(_c7, \"MuteIcon\");\n$RefreshReg$(_c8, \"UnmuteIcon\");\n$RefreshReg$(_c9, \"ScrollVideoPlayer\");\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/components/video/ScrollVideoPlayer.tsx\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/hooks/useVideoPreload.ts":
/*!**************************************!*\
  !*** ./src/hooks/useVideoPreload.ts ***!
  \**************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearVideoPreloadCache: function() { return /* binding */ clearVideoPreloadCache; },\n/* harmony export */   preloadVideosInAdvance: function() { return /* binding */ preloadVideosInAdvance; },\n/* harmony export */   useVideoPreload: function() { return /* binding */ useVideoPreload; }\n/* harmony export */ });\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! react */ \"(app-pages-browser)/./node_modules/next/dist/compiled/react/index.js\");\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_0___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_0__);\n/* harmony import */ var _utils_videoPreloader__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ../utils/videoPreloader */ \"(app-pages-browser)/./src/utils/videoPreloader.ts\");\n\n\n/**\n * React hook for preloading videos with progress tracking\n * \n * @param sources - Array of video sources in different formats\n * @param options - Preloading options\n * @returns Object with preloaded video element and loading state\n */ const useVideoPreload = function(sources) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const [videoElement, setVideoElement] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    const [progress, setProgress] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(0);\n    const [isLoaded, setIsLoaded] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [isLoading, setIsLoading] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(false);\n    const [error, setError] = (0,react__WEBPACK_IMPORTED_MODULE_0__.useState)(null);\n    (0,react__WEBPACK_IMPORTED_MODULE_0__.useEffect)(()=>{\n        // Reset state when sources change\n        setProgress(0);\n        setIsLoaded(false);\n        setIsLoading(true);\n        setError(null);\n        // Check if video is already preloaded\n        if (_utils_videoPreloader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].isVideoPreloaded(sources)) {\n            const preloadedVideo = _utils_videoPreloader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getPreloadedVideo(sources);\n            setVideoElement(preloadedVideo);\n            setProgress(1);\n            setIsLoaded(true);\n            setIsLoading(false);\n            return;\n        }\n        // Start preloading the video\n        const preloadOptions = {\n            ...options,\n            onProgress: (loadProgress)=>{\n                setProgress(loadProgress);\n            },\n            onComplete: ()=>{\n                const videoEl = _utils_videoPreloader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].getPreloadedVideo(sources);\n                setVideoElement(videoEl);\n                setIsLoaded(true);\n                setIsLoading(false);\n            },\n            onError: (err)=>{\n                console.error(\"Video preloading error:\", err);\n                setError(typeof err === \"string\" ? err : err.message);\n                setIsLoading(false);\n            }\n        };\n        _utils_videoPreloader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].preloadVideo(sources, preloadOptions);\n        // Cleanup function\n        return ()=>{\n        // We don't clear the cache here since other components might use the same video\n        // The cache cleanup should be handled at a higher level when appropriate\n        };\n    }, [\n        sources,\n        options.metadataOnly,\n        options.priority\n    ]);\n    return {\n        videoElement,\n        progress,\n        isLoaded,\n        isLoading,\n        error\n    };\n};\n/**\n * Preload multiple videos in advance without waiting for the result\n * Useful for preloading videos that will be needed later\n * \n * @param videosToPreload - Array of video sources and their preload options\n */ const preloadVideosInAdvance = (videosToPreload)=>{\n    _utils_videoPreloader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].preloadVideos(videosToPreload.map((video)=>({\n            sources: video.sources,\n            options: video.options\n        })));\n};\n/**\n * Clear all preloaded videos from cache\n * Call this when navigating away from pages with videos to free memory\n */ const clearVideoPreloadCache = ()=>{\n    _utils_videoPreloader__WEBPACK_IMPORTED_MODULE_1__[\"default\"].clearPreloadCache();\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = (useVideoPreload);\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKGFwcC1wYWdlcy1icm93c2VyKS8uL3NyYy9ob29rcy91c2VWaWRlb1ByZWxvYWQudHMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7O0FBQTRDO0FBQzBDO0FBOEJ0Rjs7Ozs7O0NBTUMsR0FDTSxNQUFNRyxrQkFBa0IsU0FDN0JDO1FBQ0FDLDJFQUF5RSxDQUFDO0lBRTFFLE1BQU0sQ0FBQ0MsY0FBY0MsZ0JBQWdCLEdBQUdQLCtDQUFRQSxDQUEwQjtJQUMxRSxNQUFNLENBQUNRLFVBQVVDLFlBQVksR0FBR1QsK0NBQVFBLENBQVM7SUFDakQsTUFBTSxDQUFDVSxVQUFVQyxZQUFZLEdBQUdYLCtDQUFRQSxDQUFVO0lBQ2xELE1BQU0sQ0FBQ1ksV0FBV0MsYUFBYSxHQUFHYiwrQ0FBUUEsQ0FBVTtJQUNwRCxNQUFNLENBQUNjLE9BQU9DLFNBQVMsR0FBR2YsK0NBQVFBLENBQWdCO0lBRWxEQyxnREFBU0EsQ0FBQztRQUNSLGtDQUFrQztRQUNsQ1EsWUFBWTtRQUNaRSxZQUFZO1FBQ1pFLGFBQWE7UUFDYkUsU0FBUztRQUVULHNDQUFzQztRQUN0QyxJQUFJYiw4RUFBK0IsQ0FBQ0UsVUFBVTtZQUM1QyxNQUFNYSxpQkFBaUJmLCtFQUFnQyxDQUFDRTtZQUN4REcsZ0JBQWdCVTtZQUNoQlIsWUFBWTtZQUNaRSxZQUFZO1lBQ1pFLGFBQWE7WUFDYjtRQUNGO1FBRUEsNkJBQTZCO1FBQzdCLE1BQU1NLGlCQUFpQztZQUNyQyxHQUFHZCxPQUFPO1lBQ1ZlLFlBQVksQ0FBQ0M7Z0JBQ1haLFlBQVlZO1lBQ2Q7WUFDQUMsWUFBWTtnQkFDVixNQUFNQyxVQUFVckIsK0VBQWdDLENBQUNFO2dCQUNqREcsZ0JBQWdCZ0I7Z0JBQ2hCWixZQUFZO2dCQUNaRSxhQUFhO1lBQ2Y7WUFDQVcsU0FBUyxDQUFDQztnQkFDUkMsUUFBUVosS0FBSyxDQUFDLDJCQUEyQlc7Z0JBQ3pDVixTQUFTLE9BQU9VLFFBQVEsV0FBV0EsTUFBTUEsSUFBSUUsT0FBTztnQkFDcERkLGFBQWE7WUFDZjtRQUNGO1FBRUFYLDBFQUEyQixDQUFDRSxTQUFTZTtRQUVyQyxtQkFBbUI7UUFDbkIsT0FBTztRQUNMLGdGQUFnRjtRQUNoRix5RUFBeUU7UUFDM0U7SUFDRixHQUFHO1FBQUNmO1FBQVNDLFFBQVF3QixZQUFZO1FBQUV4QixRQUFReUIsUUFBUTtLQUFDO0lBRXBELE9BQU87UUFDTHhCO1FBQ0FFO1FBQ0FFO1FBQ0FFO1FBQ0FFO0lBQ0Y7QUFDRixFQUFFO0FBRUY7Ozs7O0NBS0MsR0FDTSxNQUFNaUIseUJBQXlCLENBQ3BDQztJQUtBOUIsMkVBQTRCLENBQzFCOEIsZ0JBQWdCRSxHQUFHLENBQUNDLENBQUFBLFFBQVU7WUFDNUIvQixTQUFTK0IsTUFBTS9CLE9BQU87WUFDdEJDLFNBQVM4QixNQUFNOUIsT0FBTztRQUN4QjtBQUVKLEVBQUU7QUFFRjs7O0NBR0MsR0FDTSxNQUFNK0IseUJBQXlCO0lBQ3BDbEMsK0VBQWdDO0FBQ2xDLEVBQUU7QUFFRiwrREFBZUMsZUFBZUEsRUFBQyIsInNvdXJjZXMiOlsid2VicGFjazovL19OX0UvLi9zcmMvaG9va3MvdXNlVmlkZW9QcmVsb2FkLnRzPzU5MWMiXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgdXNlU3RhdGUsIHVzZUVmZmVjdCB9IGZyb20gJ3JlYWN0JztcbmltcG9ydCB2aWRlb1ByZWxvYWRlciwgeyBQcmVsb2FkT3B0aW9ucywgVmlkZW9Tb3VyY2UgfSBmcm9tICcuLi91dGlscy92aWRlb1ByZWxvYWRlcic7XG5cbmludGVyZmFjZSBVc2VWaWRlb1ByZWxvYWRSZXN1bHQge1xuICAvKipcbiAgICogUHJlbG9hZGVkIHZpZGVvIGVsZW1lbnQgdGhhdCBjYW4gYmUgdXNlZCBmb3IgcGxheWJhY2tcbiAgICogV2lsbCBiZSBudWxsIHVudGlsIHByZWxvYWRpbmcgaXMgY29tcGxldGVcbiAgICovXG4gIHZpZGVvRWxlbWVudDogSFRNTFZpZGVvRWxlbWVudCB8IG51bGw7XG4gIFxuICAvKipcbiAgICogQ3VycmVudCBsb2FkaW5nIHByb2dyZXNzICgwLTEpXG4gICAqL1xuICBwcm9ncmVzczogbnVtYmVyO1xuICBcbiAgLyoqXG4gICAqIFdoZXRoZXIgdGhlIHZpZGVvIGhhcyBiZWVuIGZ1bGx5IHByZWxvYWRlZFxuICAgKi9cbiAgaXNMb2FkZWQ6IGJvb2xlYW47XG4gIFxuICAvKipcbiAgICogV2hldGhlciB0aGUgcHJlbG9hZGluZyBpcyBjdXJyZW50bHkgaW4gcHJvZ3Jlc3NcbiAgICovXG4gIGlzTG9hZGluZzogYm9vbGVhbjtcbiAgXG4gIC8qKlxuICAgKiBFcnJvciBtZXNzYWdlIGlmIHByZWxvYWRpbmcgZmFpbGVkXG4gICAqL1xuICBlcnJvcjogc3RyaW5nIHwgbnVsbDtcbn1cblxuLyoqXG4gKiBSZWFjdCBob29rIGZvciBwcmVsb2FkaW5nIHZpZGVvcyB3aXRoIHByb2dyZXNzIHRyYWNraW5nXG4gKiBcbiAqIEBwYXJhbSBzb3VyY2VzIC0gQXJyYXkgb2YgdmlkZW8gc291cmNlcyBpbiBkaWZmZXJlbnQgZm9ybWF0c1xuICogQHBhcmFtIG9wdGlvbnMgLSBQcmVsb2FkaW5nIG9wdGlvbnNcbiAqIEByZXR1cm5zIE9iamVjdCB3aXRoIHByZWxvYWRlZCB2aWRlbyBlbGVtZW50IGFuZCBsb2FkaW5nIHN0YXRlXG4gKi9cbmV4cG9ydCBjb25zdCB1c2VWaWRlb1ByZWxvYWQgPSAoXG4gIHNvdXJjZXM6IFZpZGVvU291cmNlW10sXG4gIG9wdGlvbnM6IE9taXQ8UHJlbG9hZE9wdGlvbnMsICdvbkNvbXBsZXRlJyB8ICdvblByb2dyZXNzJyB8ICdvbkVycm9yJz4gPSB7fVxuKTogVXNlVmlkZW9QcmVsb2FkUmVzdWx0ID0+IHtcbiAgY29uc3QgW3ZpZGVvRWxlbWVudCwgc2V0VmlkZW9FbGVtZW50XSA9IHVzZVN0YXRlPEhUTUxWaWRlb0VsZW1lbnQgfCBudWxsPihudWxsKTtcbiAgY29uc3QgW3Byb2dyZXNzLCBzZXRQcm9ncmVzc10gPSB1c2VTdGF0ZTxudW1iZXI+KDApO1xuICBjb25zdCBbaXNMb2FkZWQsIHNldElzTG9hZGVkXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgY29uc3QgW2lzTG9hZGluZywgc2V0SXNMb2FkaW5nXSA9IHVzZVN0YXRlPGJvb2xlYW4+KGZhbHNlKTtcbiAgY29uc3QgW2Vycm9yLCBzZXRFcnJvcl0gPSB1c2VTdGF0ZTxzdHJpbmcgfCBudWxsPihudWxsKTtcbiAgXG4gIHVzZUVmZmVjdCgoKSA9PiB7XG4gICAgLy8gUmVzZXQgc3RhdGUgd2hlbiBzb3VyY2VzIGNoYW5nZVxuICAgIHNldFByb2dyZXNzKDApO1xuICAgIHNldElzTG9hZGVkKGZhbHNlKTtcbiAgICBzZXRJc0xvYWRpbmcodHJ1ZSk7XG4gICAgc2V0RXJyb3IobnVsbCk7XG4gICAgXG4gICAgLy8gQ2hlY2sgaWYgdmlkZW8gaXMgYWxyZWFkeSBwcmVsb2FkZWRcbiAgICBpZiAodmlkZW9QcmVsb2FkZXIuaXNWaWRlb1ByZWxvYWRlZChzb3VyY2VzKSkge1xuICAgICAgY29uc3QgcHJlbG9hZGVkVmlkZW8gPSB2aWRlb1ByZWxvYWRlci5nZXRQcmVsb2FkZWRWaWRlbyhzb3VyY2VzKTtcbiAgICAgIHNldFZpZGVvRWxlbWVudChwcmVsb2FkZWRWaWRlbyk7XG4gICAgICBzZXRQcm9ncmVzcygxKTtcbiAgICAgIHNldElzTG9hZGVkKHRydWUpO1xuICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIHJldHVybjtcbiAgICB9XG4gICAgXG4gICAgLy8gU3RhcnQgcHJlbG9hZGluZyB0aGUgdmlkZW9cbiAgICBjb25zdCBwcmVsb2FkT3B0aW9uczogUHJlbG9hZE9wdGlvbnMgPSB7XG4gICAgICAuLi5vcHRpb25zLFxuICAgICAgb25Qcm9ncmVzczogKGxvYWRQcm9ncmVzczogbnVtYmVyKSA9PiB7XG4gICAgICAgIHNldFByb2dyZXNzKGxvYWRQcm9ncmVzcyk7XG4gICAgICB9LFxuICAgICAgb25Db21wbGV0ZTogKCkgPT4ge1xuICAgICAgICBjb25zdCB2aWRlb0VsID0gdmlkZW9QcmVsb2FkZXIuZ2V0UHJlbG9hZGVkVmlkZW8oc291cmNlcyk7XG4gICAgICAgIHNldFZpZGVvRWxlbWVudCh2aWRlb0VsKTtcbiAgICAgICAgc2V0SXNMb2FkZWQodHJ1ZSk7XG4gICAgICAgIHNldElzTG9hZGluZyhmYWxzZSk7XG4gICAgICB9LFxuICAgICAgb25FcnJvcjogKGVycjogRXJyb3IgfCBzdHJpbmcpID0+IHtcbiAgICAgICAgY29uc29sZS5lcnJvcignVmlkZW8gcHJlbG9hZGluZyBlcnJvcjonLCBlcnIpO1xuICAgICAgICBzZXRFcnJvcih0eXBlb2YgZXJyID09PSAnc3RyaW5nJyA/IGVyciA6IGVyci5tZXNzYWdlKTtcbiAgICAgICAgc2V0SXNMb2FkaW5nKGZhbHNlKTtcbiAgICAgIH1cbiAgICB9O1xuICAgIFxuICAgIHZpZGVvUHJlbG9hZGVyLnByZWxvYWRWaWRlbyhzb3VyY2VzLCBwcmVsb2FkT3B0aW9ucyk7XG4gICAgXG4gICAgLy8gQ2xlYW51cCBmdW5jdGlvblxuICAgIHJldHVybiAoKSA9PiB7XG4gICAgICAvLyBXZSBkb24ndCBjbGVhciB0aGUgY2FjaGUgaGVyZSBzaW5jZSBvdGhlciBjb21wb25lbnRzIG1pZ2h0IHVzZSB0aGUgc2FtZSB2aWRlb1xuICAgICAgLy8gVGhlIGNhY2hlIGNsZWFudXAgc2hvdWxkIGJlIGhhbmRsZWQgYXQgYSBoaWdoZXIgbGV2ZWwgd2hlbiBhcHByb3ByaWF0ZVxuICAgIH07XG4gIH0sIFtzb3VyY2VzLCBvcHRpb25zLm1ldGFkYXRhT25seSwgb3B0aW9ucy5wcmlvcml0eV0pO1xuICBcbiAgcmV0dXJuIHtcbiAgICB2aWRlb0VsZW1lbnQsXG4gICAgcHJvZ3Jlc3MsXG4gICAgaXNMb2FkZWQsXG4gICAgaXNMb2FkaW5nLFxuICAgIGVycm9yXG4gIH07XG59O1xuXG4vKipcbiAqIFByZWxvYWQgbXVsdGlwbGUgdmlkZW9zIGluIGFkdmFuY2Ugd2l0aG91dCB3YWl0aW5nIGZvciB0aGUgcmVzdWx0XG4gKiBVc2VmdWwgZm9yIHByZWxvYWRpbmcgdmlkZW9zIHRoYXQgd2lsbCBiZSBuZWVkZWQgbGF0ZXJcbiAqIFxuICogQHBhcmFtIHZpZGVvc1RvUHJlbG9hZCAtIEFycmF5IG9mIHZpZGVvIHNvdXJjZXMgYW5kIHRoZWlyIHByZWxvYWQgb3B0aW9uc1xuICovXG5leHBvcnQgY29uc3QgcHJlbG9hZFZpZGVvc0luQWR2YW5jZSA9IChcbiAgdmlkZW9zVG9QcmVsb2FkOiBBcnJheTx7XG4gICAgc291cmNlczogVmlkZW9Tb3VyY2VbXTtcbiAgICBvcHRpb25zPzogT21pdDxQcmVsb2FkT3B0aW9ucywgJ29uQ29tcGxldGUnIHwgJ29uUHJvZ3Jlc3MnIHwgJ29uRXJyb3InPjtcbiAgfT5cbik6IHZvaWQgPT4ge1xuICB2aWRlb1ByZWxvYWRlci5wcmVsb2FkVmlkZW9zKFxuICAgIHZpZGVvc1RvUHJlbG9hZC5tYXAodmlkZW8gPT4gKHtcbiAgICAgIHNvdXJjZXM6IHZpZGVvLnNvdXJjZXMsXG4gICAgICBvcHRpb25zOiB2aWRlby5vcHRpb25zXG4gICAgfSkpXG4gICk7XG59O1xuXG4vKipcbiAqIENsZWFyIGFsbCBwcmVsb2FkZWQgdmlkZW9zIGZyb20gY2FjaGVcbiAqIENhbGwgdGhpcyB3aGVuIG5hdmlnYXRpbmcgYXdheSBmcm9tIHBhZ2VzIHdpdGggdmlkZW9zIHRvIGZyZWUgbWVtb3J5XG4gKi9cbmV4cG9ydCBjb25zdCBjbGVhclZpZGVvUHJlbG9hZENhY2hlID0gKCk6IHZvaWQgPT4ge1xuICB2aWRlb1ByZWxvYWRlci5jbGVhclByZWxvYWRDYWNoZSgpO1xufTtcblxuZXhwb3J0IGRlZmF1bHQgdXNlVmlkZW9QcmVsb2FkOyAiXSwibmFtZXMiOlsidXNlU3RhdGUiLCJ1c2VFZmZlY3QiLCJ2aWRlb1ByZWxvYWRlciIsInVzZVZpZGVvUHJlbG9hZCIsInNvdXJjZXMiLCJvcHRpb25zIiwidmlkZW9FbGVtZW50Iiwic2V0VmlkZW9FbGVtZW50IiwicHJvZ3Jlc3MiLCJzZXRQcm9ncmVzcyIsImlzTG9hZGVkIiwic2V0SXNMb2FkZWQiLCJpc0xvYWRpbmciLCJzZXRJc0xvYWRpbmciLCJlcnJvciIsInNldEVycm9yIiwiaXNWaWRlb1ByZWxvYWRlZCIsInByZWxvYWRlZFZpZGVvIiwiZ2V0UHJlbG9hZGVkVmlkZW8iLCJwcmVsb2FkT3B0aW9ucyIsIm9uUHJvZ3Jlc3MiLCJsb2FkUHJvZ3Jlc3MiLCJvbkNvbXBsZXRlIiwidmlkZW9FbCIsIm9uRXJyb3IiLCJlcnIiLCJjb25zb2xlIiwibWVzc2FnZSIsInByZWxvYWRWaWRlbyIsIm1ldGFkYXRhT25seSIsInByaW9yaXR5IiwicHJlbG9hZFZpZGVvc0luQWR2YW5jZSIsInZpZGVvc1RvUHJlbG9hZCIsInByZWxvYWRWaWRlb3MiLCJtYXAiLCJ2aWRlbyIsImNsZWFyVmlkZW9QcmVsb2FkQ2FjaGUiLCJjbGVhclByZWxvYWRDYWNoZSJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/hooks/useVideoPreload.ts\n"));

/***/ }),

/***/ "(app-pages-browser)/./src/utils/videoPreloader.ts":
/*!*************************************!*\
  !*** ./src/utils/videoPreloader.ts ***!
  \*************************************/
/***/ (function(module, __webpack_exports__, __webpack_require__) {

eval(__webpack_require__.ts("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   clearPreloadCache: function() { return /* binding */ clearPreloadCache; },\n/* harmony export */   getPreloadedVideo: function() { return /* binding */ getPreloadedVideo; },\n/* harmony export */   isVideoPreloaded: function() { return /* binding */ isVideoPreloaded; },\n/* harmony export */   preloadVideo: function() { return /* binding */ preloadVideo; },\n/* harmony export */   preloadVideos: function() { return /* binding */ preloadVideos; },\n/* harmony export */   queueVideoPreload: function() { return /* binding */ queueVideoPreload; }\n/* harmony export */ });\n/**\n * Video Preloader Utility\n * \n * This utility provides functions to preload videos before they are needed,\n * improving the playback experience by reducing or eliminating buffering.\n */ // Store preloaded video elements to prevent duplicate preloading\nconst preloadCache = new Map();\n/**\n * Queue for managing preload requests\n */ class PreloadQueue {\n    static getInstance() {\n        if (!PreloadQueue.instance) {\n            PreloadQueue.instance = new PreloadQueue();\n        }\n        return PreloadQueue.instance;\n    }\n    /**\n   * Add a video to the preload queue\n   */ add(sources, options, id) {\n        // Sort queue by priority before adding new item\n        this.queue.push({\n            sources,\n            options,\n            id\n        });\n        this.queue.sort((a, b)=>(b.options.priority || 1) - (a.options.priority || 1));\n        this.processQueue();\n    }\n    /**\n   * Process the preload queue, starting preloads as capacity allows\n   */ processQueue() {\n        if (this.activePreloads >= this.MAX_CONCURRENT || this.queue.length === 0) {\n            return;\n        }\n        const nextItem = this.queue.shift();\n        if (!nextItem) return;\n        this.activePreloads++;\n        // Start preloading the video\n        preloadVideo(nextItem.sources, {\n            ...nextItem.options,\n            onComplete: ()=>{\n                var _nextItem_options_onComplete, _nextItem_options;\n                this.activePreloads--;\n                (_nextItem_options_onComplete = (_nextItem_options = nextItem.options).onComplete) === null || _nextItem_options_onComplete === void 0 ? void 0 : _nextItem_options_onComplete.call(_nextItem_options);\n                this.processQueue(); // Process next in queue when this one completes\n            },\n            onError: (error)=>{\n                var _nextItem_options_onError, _nextItem_options;\n                this.activePreloads--;\n                (_nextItem_options_onError = (_nextItem_options = nextItem.options).onError) === null || _nextItem_options_onError === void 0 ? void 0 : _nextItem_options_onError.call(_nextItem_options, error);\n                this.processQueue(); // Process next in queue even if there's an error\n            }\n        }, nextItem.id);\n    }\n    /**\n   * Clear the entire preload queue\n   */ clear() {\n        this.queue = [];\n    }\n    /**\n   * Get the current size of the queue\n   */ size() {\n        return this.queue.length;\n    }\n    constructor(){\n        this.queue = [];\n        this.activePreloads = 0;\n        this.MAX_CONCURRENT = 2 // Maximum number of videos to preload at once\n        ;\n    }\n}\n/**\n * Generate a unique ID for a video based on its sources\n */ const generateVideoId = (sources)=>{\n    return sources.map((source)=>source.src).join(\"|\");\n};\n/**\n * Preload a single video with specified sources\n * \n * @param sources - Array of video sources in different formats\n * @param options - Preloading options\n * @param videoId - Optional ID for the video (generated from sources if not provided)\n * @returns HTMLVideoElement that can be used for playback\n */ const preloadVideo = function(sources) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {}, videoId = arguments.length > 2 ? arguments[2] : void 0;\n    const id = videoId || generateVideoId(sources);\n    // If already in cache and loaded, return immediately\n    if (preloadCache.has(id)) {\n        const cached = preloadCache.get(id);\n        if (cached && (cached.status === \"loaded\" || cached.priority > (options.priority || 1))) {\n            var _options_onComplete;\n            (_options_onComplete = options.onComplete) === null || _options_onComplete === void 0 ? void 0 : _options_onComplete.call(options);\n            return cached.element;\n        }\n    }\n    // Create a new video element for preloading\n    const videoElement = document.createElement(\"video\");\n    videoElement.style.display = \"none\"; // Hidden from view\n    videoElement.muted = true; // Must be muted for autoplay\n    videoElement.playsInline = true; // Required for mobile\n    videoElement.setAttribute(\"preload\", options.metadataOnly ? \"metadata\" : \"auto\");\n    // Add video to cache immediately to prevent duplicate preloading\n    preloadCache.set(id, {\n        element: videoElement,\n        status: \"loading\",\n        priority: options.priority || 1\n    });\n    // Set up event listeners for tracking progress\n    videoElement.addEventListener(\"loadedmetadata\", ()=>{\n        if (options.metadataOnly) {\n            var _options_onProgress, _options_onComplete;\n            preloadCache.set(id, {\n                element: videoElement,\n                status: \"loaded\",\n                priority: options.priority || 1\n            });\n            (_options_onProgress = options.onProgress) === null || _options_onProgress === void 0 ? void 0 : _options_onProgress.call(options, 1);\n            (_options_onComplete = options.onComplete) === null || _options_onComplete === void 0 ? void 0 : _options_onComplete.call(options);\n        }\n    });\n    videoElement.addEventListener(\"progress\", ()=>{\n        if (options.metadataOnly) return;\n        // Calculate loading progress\n        if (videoElement.buffered.length > 0) {\n            var _options_onProgress;\n            const bufferedEnd = videoElement.buffered.end(videoElement.buffered.length - 1);\n            const duration = videoElement.duration;\n            const progress = bufferedEnd / duration;\n            (_options_onProgress = options.onProgress) === null || _options_onProgress === void 0 ? void 0 : _options_onProgress.call(options, progress);\n            // Consider fully loaded when buffered to the end\n            if (Math.abs(bufferedEnd - duration) < 0.1) {\n                var _options_onComplete;\n                preloadCache.set(id, {\n                    element: videoElement,\n                    status: \"loaded\",\n                    priority: options.priority || 1\n                });\n                (_options_onComplete = options.onComplete) === null || _options_onComplete === void 0 ? void 0 : _options_onComplete.call(options);\n            }\n        }\n    });\n    videoElement.addEventListener(\"canplaythrough\", ()=>{\n        var _options_onProgress, _options_onComplete;\n        if (options.metadataOnly) return;\n        preloadCache.set(id, {\n            element: videoElement,\n            status: \"loaded\",\n            priority: options.priority || 1\n        });\n        (_options_onProgress = options.onProgress) === null || _options_onProgress === void 0 ? void 0 : _options_onProgress.call(options, 1);\n        (_options_onComplete = options.onComplete) === null || _options_onComplete === void 0 ? void 0 : _options_onComplete.call(options);\n    });\n    videoElement.addEventListener(\"error\", (e)=>{\n        var _options_onError;\n        preloadCache.set(id, {\n            element: videoElement,\n            status: \"error\",\n            priority: options.priority || 1\n        });\n        (_options_onError = options.onError) === null || _options_onError === void 0 ? void 0 : _options_onError.call(options, new Error(\"Failed to preload video: \".concat(e)));\n    });\n    // Add source elements to the video\n    sources.forEach((source)=>{\n        const sourceElement = document.createElement(\"source\");\n        sourceElement.src = source.src;\n        sourceElement.type = source.type;\n        videoElement.appendChild(sourceElement);\n    });\n    // Start loading the video\n    document.body.appendChild(videoElement);\n    // Start loading by triggering the load method\n    videoElement.load();\n    return videoElement;\n};\n/**\n * Queue a video for preloading based on priority\n * \n * @param sources - Array of video sources in different formats\n * @param options - Preloading options\n * @returns Unique ID for the queued video\n */ const queueVideoPreload = function(sources) {\n    let options = arguments.length > 1 && arguments[1] !== void 0 ? arguments[1] : {};\n    const id = generateVideoId(sources);\n    // If already in cache and loaded, don't queue again\n    if (preloadCache.has(id)) {\n        const cached = preloadCache.get(id);\n        if (cached && cached.status === \"loaded\") {\n            var _options_onComplete;\n            (_options_onComplete = options.onComplete) === null || _options_onComplete === void 0 ? void 0 : _options_onComplete.call(options);\n            return id;\n        }\n    }\n    // Add to queue\n    PreloadQueue.getInstance().add(sources, options, id);\n    return id;\n};\n/**\n * Preload multiple videos with assigned priorities\n * \n * @param videosToPreload - Array of video sources and their preload options\n */ const preloadVideos = (videosToPreload)=>{\n    // Sort by priority\n    const sortedVideos = [\n        ...videosToPreload\n    ].sort((a, b)=>{\n        var _b_options, _a_options;\n        return (((_b_options = b.options) === null || _b_options === void 0 ? void 0 : _b_options.priority) || 1) - (((_a_options = a.options) === null || _a_options === void 0 ? void 0 : _a_options.priority) || 1);\n    });\n    // Queue each video for preloading\n    sortedVideos.forEach((video)=>{\n        queueVideoPreload(video.sources, video.options);\n    });\n};\n/**\n * Get a preloaded video element if available\n * \n * @param sources - Array of video sources to look up\n * @returns The preloaded video element or null if not found\n */ const getPreloadedVideo = (sources)=>{\n    const id = generateVideoId(sources);\n    const cached = preloadCache.get(id);\n    if (cached && cached.status === \"loaded\") {\n        // Clone the element to avoid conflicts with the preloaded version\n        const clonedVideo = cached.element.cloneNode(true);\n        clonedVideo.style.display = \"\";\n        return clonedVideo;\n    }\n    return null;\n};\n/**\n * Clear all preloaded videos from cache to free memory\n */ const clearPreloadCache = ()=>{\n    // Remove all video elements from DOM\n    preloadCache.forEach((cached)=>{\n        if (cached.element.parentNode) {\n            cached.element.parentNode.removeChild(cached.element);\n        }\n    });\n    // Clear the cache\n    preloadCache.clear();\n    // Clear the queue\n    PreloadQueue.getInstance().clear();\n};\n/**\n * Check if a video is already preloaded\n */ const isVideoPreloaded = (sources)=>{\n    const id = generateVideoId(sources);\n    const cached = preloadCache.get(id);\n    return (cached === null || cached === void 0 ? void 0 : cached.status) === \"loaded\";\n};\n/* harmony default export */ __webpack_exports__[\"default\"] = ({\n    preloadVideo,\n    queueVideoPreload,\n    preloadVideos,\n    getPreloadedVideo,\n    clearPreloadCache,\n    isVideoPreloaded\n});\n\n\n;\n    // Wrapped in an IIFE to avoid polluting the global scope\n    ;\n    (function () {\n        var _a, _b;\n        // Legacy CSS implementations will `eval` browser code in a Node.js context\n        // to extract CSS. For backwards compatibility, we need to check we're in a\n        // browser context before continuing.\n        if (typeof self !== 'undefined' &&\n            // AMP / No-JS mode does not inject these helpers:\n            '$RefreshHelpers$' in self) {\n            // @ts-ignore __webpack_module__ is global\n            var currentExports = module.exports;\n            // @ts-ignore __webpack_module__ is global\n            var prevSignature = (_b = (_a = module.hot.data) === null || _a === void 0 ? void 0 : _a.prevSignature) !== null && _b !== void 0 ? _b : null;\n            // This cannot happen in MainTemplate because the exports mismatch between\n            // templating and execution.\n            self.$RefreshHelpers$.registerExportsForReactRefresh(currentExports, module.id);\n            // A module can be accepted automatically based on its exports, e.g. when\n            // it is a Refresh Boundary.\n            if (self.$RefreshHelpers$.isReactRefreshBoundary(currentExports)) {\n                // Save the previous exports signature on update so we can compare the boundary\n                // signatures. We avoid saving exports themselves since it causes memory leaks (https://github.com/vercel/next.js/pull/53797)\n                module.hot.dispose(function (data) {\n                    data.prevSignature =\n                        self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports);\n                });\n                // Unconditionally accept an update to this module, we'll check if it's\n                // still a Refresh Boundary later.\n                // @ts-ignore importMeta is replaced in the loader\n                module.hot.accept();\n                // This field is set when the previous version of this module was a\n                // Refresh Boundary, letting us know we need to check for invalidation or\n                // enqueue an update.\n                if (prevSignature !== null) {\n                    // A boundary can become ineligible if its exports are incompatible\n                    // with the previous exports.\n                    //\n                    // For example, if you add/remove/change exports, we'll want to\n                    // re-execute the importing modules, and force those components to\n                    // re-render. Similarly, if you convert a class component to a\n                    // function, we want to invalidate the boundary.\n                    if (self.$RefreshHelpers$.shouldInvalidateReactRefreshBoundary(prevSignature, self.$RefreshHelpers$.getRefreshBoundarySignature(currentExports))) {\n                        module.hot.invalidate();\n                    }\n                    else {\n                        self.$RefreshHelpers$.scheduleUpdate();\n                    }\n                }\n            }\n            else {\n                // Since we just executed the code for the module, it's possible that the\n                // new exports made it ineligible for being a boundary.\n                // We only care about the case when we were _previously_ a boundary,\n                // because we already accepted this update (accidental side effect).\n                var isNoLongerABoundary = prevSignature !== null;\n                if (isNoLongerABoundary) {\n                    module.hot.invalidate();\n                }\n            }\n        }\n    })();\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(app-pages-browser)/./src/utils/videoPreloader.ts\n"));

/***/ })

});